# class Order(models.Model):
#     customer=models.ForeignKey(Customer,on_delete=models.SET_NULL,null=True,blank=True)
#     date_ordered=models.DateTimeField(auto_now_add=True)
#     complete=models.BooleanField(default=False)
#     transaction_id=models.CharField(max_length=100,null=True)
    
#     def __str__(self):
#         return self.transaction_id
    
#     @Product   
#     def get_cart_total(self):
#         order_items=self.orderitem_set.all()
#         total=sum([item.get_total for item in order_items])
#         return total
    
#     @Product   
#     def get_cart_item(self):
#         order_items=self.orderitem_set.all()
#         total=sum([item.quantity for item in order_items])
#         return total
    
# class OrderItem(models.Model):
#     product=models.ForeignKey(Product,on_delete=models.SET_NULL,null=True)
#     order=models.ForeignKey(Order,on_delete=models.SET_NULL,null=True)
#     quantity=models.IntegerField(default=0,null=True,blank=True)
#     date_added=models.DateTimeField(auto_now_add=True)
    
#     def __str__(self):
#         return "self.quantity"
    
#     @property
#     def get_total(self):
#         return self.product.price*self.quantity